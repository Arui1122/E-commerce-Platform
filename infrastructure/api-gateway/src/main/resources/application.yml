server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    config:
      enabled: false
    gateway:
      routes:
        # User Service 路由
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/v1/users/**
          filters:
            - StripPrefix=0
            - name: CircuitBreaker
              args:
                name: user-service
                fallbackUri: forward:/fallback/users
            - name: RequestRateLimiter
              args:
                "[redis-rate-limiter.replenishRate]": 10
                "[redis-rate-limiter.burstCapacity]": 20

        # Product Service 路由
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/v1/products/**
          filters:
            - StripPrefix=0
            - name: CircuitBreaker
              args:
                name: product-service
                fallbackUri: forward:/fallback/products

        # Cart Service 路由
        - id: cart-service
          uri: lb://cart-service
          predicates:
            - Path=/api/v1/carts/**
          filters:
            - StripPrefix=0
            - name: CircuitBreaker
              args:
                name: cart-service
                fallbackUri: forward:/fallback/cart

        # Order Service 路由
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - StripPrefix=0
            - name: CircuitBreaker
              args:
                name: order-service
                fallbackUri: forward:/fallback/orders

        # Inventory Service 路由
        - id: inventory-service
          uri: lb://inventory-service
          predicates:
            - Path=/api/v1/inventory/**
          filters:
            - StripPrefix=0
            - name: CircuitBreaker
              args:
                name: inventory-service
                fallbackUri: forward:/fallback/inventory

      # 全域 CORS 配置
      globalcors:
        corsConfigurations:
          "[/**]":
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true

  # Redis 配置（用於限流）
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

# Resilience4j 熔斷器配置
resilience4j:
  circuitbreaker:
    instances:
      user-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      product-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    "[org.springframework.cloud.gateway]": DEBUG
    "[com.ecommerce.gateway]": DEBUG
