spring:
  application:
    name: order-service
  profiles:
    active: dev
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
      client:
        config:
          default:
            connectTimeout: 10000
            readTimeout: 60000
            loggerLevel: basic
          inventory-service:
            connectTimeout: 5000
            readTimeout: 30000
          cart-service:
            connectTimeout: 3000
            readTimeout: 15000

resilience4j:
  circuitbreaker:
    instances:
      inventory-service:
        sliding-window-size: 20
        minimum-number-of-calls: 10
        failure-rate-threshold: 60
        wait-duration-in-open-state: 15s
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
      cart-service:
        sliding-window-size: 15
        minimum-number-of-calls: 8
        failure-rate-threshold: 40
        wait-duration-in-open-state: 20s
        permitted-number-of-calls-in-half-open-state: 3
      default:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3
  timelimiter:
    instances:
      inventory-service:
        timeout-duration: 5s
      cart-service:
        timeout-duration: 3s
      default:
        timeout-duration: 10s

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,circuitbreakers
  endpoint:
    health:
      show-details: always

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

server:
  port: 8084
